Loaded module: python3/3.6.2
Loaded module: cuda/8.0
Loaded module: cudnn/v7.0-prod-cuda8
Running script...
##converting Controller to cuda-enabled
1000/10000
Arch ['Tanh', 64, 'Tanh']
acc tensor(0.9548)
loss tensor(1.3908, device='cuda:0', grad_fn=<NegBackward>)

2000/10000
Arch [64, 'Tanh', 64]
acc tensor(0.9698)
loss tensor(1.4167, device='cuda:0', grad_fn=<NegBackward>)

3000/10000
Arch [32, 32, 'Tanh']
acc tensor(0.9749)
loss tensor(1.6268, device='cuda:0', grad_fn=<NegBackward>)

4000/10000
Arch [2, 8, 'Tanh']
acc tensor(0.8744)
loss tensor(1.1308, device='cuda:0', grad_fn=<NegBackward>)

5000/10000
Arch [16, 2, 'Tanh']
acc tensor(0.8744)
loss tensor(1.4207, device='cuda:0', grad_fn=<NegBackward>)

6000/10000
Arch [64, 64, 4, 'Tanh']
acc tensor(0.9598)
loss tensor(1.2037, device='cuda:0', grad_fn=<NegBackward>)

7000/10000
Arch [64, 4, 4]
acc tensor(0.8744)
loss tensor(0.9346, device='cuda:0', grad_fn=<NegBackward>)

8000/10000
Arch [64, 'Tanh']
acc tensor(0.9598)
loss tensor(-0.0722, device='cuda:0', grad_fn=<NegBackward>)

9000/10000
Arch [2, 2, 4, 'ReLU']
acc tensor(0.8744)
loss tensor(1.6020, device='cuda:0', grad_fn=<NegBackward>)

10000/10000
Arch [2, 'Tanh', 8]
acc tensor(0.8593)
loss tensor(1.4450, device='cuda:0', grad_fn=<NegBackward>)

##converting Controller to cuda-enabled
1000/10000
Arch [8, 'Tanh', 'Tanh']
acc tensor(0.7675)
loss tensor(0.5634, device='cuda:0', grad_fn=<NegBackward>)

2000/10000
Arch [16, 'Tanh', 'Tanh']
acc tensor(0.8056)
loss tensor(0.4957, device='cuda:0', grad_fn=<NegBackward>)

3000/10000
Arch ['Tanh', 'Tanh', 'Tanh']
acc tensor(0.8377)
loss tensor(0.2794, device='cuda:0', grad_fn=<NegBackward>)

4000/10000
Arch [32, 'Tanh', 'Tanh']
acc tensor(0.8257)
loss tensor(0.5072, device='cuda:0', grad_fn=<NegBackward>)

5000/10000
Arch ['Tanh', 'Tanh', 'Tanh', 16]
acc tensor(0.8236)
loss tensor(0.6482, device='cuda:0', grad_fn=<NegBackward>)

6000/10000
Arch [32, 'Tanh', 'Tanh', 'Sigmoid']
acc tensor(0.8096)
loss tensor(0.6845, device='cuda:0', grad_fn=<NegBackward>)

7000/10000
Arch ['Tanh', 8, 'Tanh']
acc tensor(0.7896)
loss tensor(0.8806, device='cuda:0', grad_fn=<NegBackward>)

8000/10000
Arch ['ReLU', 'Tanh', 'Tanh']
acc tensor(0.8317)
loss tensor(0.3986, device='cuda:0', grad_fn=<NegBackward>)

9000/10000
Arch ['Tanh', 'Tanh', 'Tanh']
acc tensor(0.8397)
loss tensor(0.2581, device='cuda:0', grad_fn=<NegBackward>)

10000/10000
Arch ['ReLU', 'Tanh', 'Tanh']
acc tensor(0.8337)
loss tensor(0.3938, device='cuda:0', grad_fn=<NegBackward>)


------------------------------------------------------------
Sender: LSF System <lsfadmin@n-62-20-7>
Subject: Job 4818657: <myJob> in cluster <dcc> Done

Job <myJob> was submitted from host <n-62-27-19> by user <s174007> in cluster <dcc> at Sun Dec  1 23:16:05 2019
Job was executed on host(s) <n-62-20-7>, in queue <gpuv100>, as user <s174007> in cluster <dcc> at Mon Dec  2 01:42:16 2019
</zhome/b0/b/127184> was used as the home directory.
</zhome/b0/b/127184/Documents/Projects/AutoML/scripts> was used as the working directory.
Started at Mon Dec  2 01:42:16 2019
Terminated at Mon Dec  2 04:04:36 2019
Results reported at Mon Dec  2 04:04:36 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -q gpuv100
#BSUB -gpu "num=1"
#BSUB -J myJob
#BSUB -n 1
#BSUB -W 10:00
#BSUB -R "rusage[mem=6GB]"
#BSUB -o ../logs/gruco%J.out

module load python3/3.6.2
module load cuda/8.0
module load cudnn/v7.0-prod-cuda8

echo "Running script..."
python3 train.py 10000 MOONS 0.01 egcct
python3 train.py 10000 MNIST 0.01 egcct

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   8513.91 sec.
    Max Memory :                                 1912 MB
    Average Memory :                             1885.12 MB
    Total Requested Memory :                     6144.00 MB
    Delta Memory :                               4232.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                10
    Run time :                                   8541 sec.
    Turnaround time :                            17311 sec.

The output (if any) is above this job summary.

