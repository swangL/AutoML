Loaded module: python3/3.6.2
Loaded module: cuda/8.0
Loaded module: cudnn/v7.0-prod-cuda8
Running script...
##converting Controller to cuda-enabled
1000/10000
Arch ['ReLU', 8, 4, 'Tanh', 4, 'ReLU', 16]
acc tensor(0.8643)
loss tensor(1.6400, device='cuda:0', grad_fn=<NegBackward>)

2000/10000
Arch [4, 32, 'Tanh']
acc tensor(0.8693)
loss tensor(1.5105, device='cuda:0', grad_fn=<NegBackward>)

3000/10000
Arch ['Sigmoid', 4, 64]
acc tensor(0.8643)
loss tensor(1.1604, device='cuda:0', grad_fn=<NegBackward>)

4000/10000
Arch [64, 'ReLU', 4, 4, 'ReLU']
acc tensor(0.9698)
loss tensor(1.7262, device='cuda:0', grad_fn=<NegBackward>)

5000/10000
Arch ['Sigmoid', 64, 8, 32, 'Tanh', 64, 4, 16]
acc tensor(0.8643)
loss tensor(1.0930, device='cuda:0', grad_fn=<NegBackward>)

6000/10000
Arch [16, 8, 'ReLU', 64]
acc tensor(0.8995)
loss tensor(1.5997, device='cuda:0', grad_fn=<NegBackward>)

7000/10000
Arch [32, 'Tanh', 'Tanh']
acc tensor(0.9598)
loss tensor(1.8969, device='cuda:0', grad_fn=<NegBackward>)

8000/10000
Arch [8, 'ReLU', 'ReLU', 4, 4]
acc tensor(0.9598)
loss tensor(1.3448, device='cuda:0', grad_fn=<NegBackward>)

9000/10000
Arch [64, 4, 'ReLU']
acc tensor(0.8693)
loss tensor(1.2689, device='cuda:0', grad_fn=<NegBackward>)

10000/10000
Arch [8, 'ReLU', 64]
acc tensor(0.9698)
loss tensor(1.0050, device='cuda:0', grad_fn=<NegBackward>)

##converting Controller to cuda-enabled
1000/10000
Arch ['Sigmoid']
acc tensor(0.8357)
loss tensor(-0.5591, device='cuda:0', grad_fn=<NegBackward>)

2000/10000
Arch [2, 'Sigmoid', 'Tanh', 'Tanh', 32]
acc tensor(0.4669)
loss tensor(0.5555, device='cuda:0', grad_fn=<NegBackward>)

3000/10000
Arch ['ReLU', 'ReLU', 64]
acc tensor(0.1062)
loss tensor(0.0125, device='cuda:0', grad_fn=<NegBackward>)

4000/10000
Arch ['ReLU', 'Sigmoid', 'Sigmoid', 32]
acc tensor(0.4369)
loss tensor(0.3447, device='cuda:0', grad_fn=<NegBackward>)

5000/10000
Arch ['Sigmoid', 'Sigmoid', 4, 64, 32, 'Tanh', 'Tanh', 4, 4]
acc tensor(0.1042)
loss tensor(-1.0218, device='cuda:0', grad_fn=<NegBackward>)

6000/10000
Arch [64, 2, 'Sigmoid', 32, 'Tanh']
acc tensor(0.4489)
loss tensor(0.6308, device='cuda:0', grad_fn=<NegBackward>)

7000/10000
Arch [64, 'Sigmoid', 64, 64, 8]
acc tensor(0.1062)
loss tensor(-0.1850, device='cuda:0', grad_fn=<NegBackward>)

8000/10000
Arch [4, 'Sigmoid', 'Sigmoid']
acc tensor(0.6493)
loss tensor(0.5842, device='cuda:0', grad_fn=<NegBackward>)

9000/10000
Arch [64, 4, 'Sigmoid', 'Tanh']
acc tensor(0.6273)
loss tensor(0.6955, device='cuda:0', grad_fn=<NegBackward>)

10000/10000
Arch [64, 'Sigmoid', 'Sigmoid']
acc tensor(0.8056)
loss tensor(0.4712, device='cuda:0', grad_fn=<NegBackward>)


------------------------------------------------------------
Sender: LSF System <lsfadmin@n-62-20-11>
Subject: Job 4814817: <myJob> in cluster <dcc> Done

Job <myJob> was submitted from host <gbarlogin2> by user <s174007> in cluster <dcc> at Sun Dec  1 16:17:32 2019
Job was executed on host(s) <n-62-20-11>, in queue <gpuv100>, as user <s174007> in cluster <dcc> at Sun Dec  1 16:17:33 2019
</zhome/b0/b/127184> was used as the home directory.
</zhome/b0/b/127184/Documents/Projects/AutoML/scripts> was used as the working directory.
Started at Sun Dec  1 16:17:33 2019
Terminated at Sun Dec  1 20:11:03 2019
Results reported at Sun Dec  1 20:11:03 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -q gpuv100
#BSUB -gpu "num=1"
#BSUB -J myJob
#BSUB -n 1
#BSUB -W 10:00
#BSUB -R "rusage[mem=6GB]"
#BSUB -o ../logs/co%J.out

module load python3/3.6.2
module load cuda/8.0
module load cudnn/v7.0-prod-cuda8

echo "Running script..."
python3 train.py 10000 MOONS 0.01 cct
python3 train.py 10000 MNIST 0.01 cct

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   13973.60 sec.
    Max Memory :                                 1903 MB
    Average Memory :                             1884.36 MB
    Total Requested Memory :                     6144.00 MB
    Delta Memory :                               4241.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                10
    Run time :                                   14026 sec.
    Turnaround time :                            14011 sec.

The output (if any) is above this job summary.

