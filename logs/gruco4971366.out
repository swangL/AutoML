Loaded module: python3/3.6.2
Loaded module: cuda/8.0
Loaded module: cudnn/v7.0-prod-cuda8
Running script...
##converting Controller to cuda-enabled
1000/10000
Arch [32, 'Tanh', 16, 'Tanh', 4, 'Tanh', 64, 'Tanh', 2, 'Tanh', 32, 'Tanh']
acc tensor(0.9598)
loss tensor(0.0059, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9549)

2000/10000
Arch []
acc tensor(0.8543)
loss tensor(-0.4840, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9551)

3000/10000
Arch [32, 'Tanh', 16, 'Tanh']
acc tensor(0.9648)
loss tensor(0.0076, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)

4000/10000
Arch [32, 'Tanh', 8, 'Tanh', 64, 'Tanh']
acc tensor(0.9648)
loss tensor(0.0096, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)

5000/10000
Arch []
acc tensor(0.8643)
loss tensor(-0.4614, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)

6000/10000
Arch [32, 'ReLU', 8, 'Tanh', 16, 'ReLU', 32, 'Tanh', 8, 'Tanh', 8, 'ReLU', 8, 'Sigmoid', 64, 'ReLU', 32, 'Tanh', 64, 'Tanh', 32, 'ReLU', 32, 'Sigmoid']
acc tensor(0.9698)
loss tensor(0.0206, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)

7000/10000
Arch [64, 'ReLU']
acc tensor(0.9648)
loss tensor(0.0230, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)

8000/10000
Arch [32, 'Tanh', 8, 'Tanh', 32, 'Tanh', 8, 'Tanh', 32, 'Tanh', 32, 'Tanh', 16, 'Tanh', 64, 'Tanh', 16, 'Tanh', 16, 'Tanh', 64, 'ReLU', 4, 'Tanh']
acc tensor(0.8492)
loss tensor(-0.1091, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)

9000/10000
Arch [32, 'ReLU', 2, 'Tanh', 32, 'Tanh', 64, 'Tanh', 4, 'Sigmoid', 32, 'Tanh', 4, 'Tanh', 32, 'ReLU', 16, 'Tanh', 16, 'Tanh', 16, 'Tanh', 16, 'Tanh']
acc tensor(0.9548)
loss tensor(0.0002, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)

10000/10000
Arch [32, 'ReLU', 16, 'Tanh', 16, 'Tanh', 16, 'Tanh', 16, 'Tanh', 32, 'ReLU', 32, 'ReLU', 64, 'Tanh', 8, 'Tanh', 32, 'Tanh', 16, 'Tanh', 4, 'Tanh']
acc tensor(0.8442)
loss tensor(-0.1175, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.9546)


------------------------------------------------------------
Sender: LSF System <lsfadmin@n-62-20-3>
Subject: Job 4971366: <myJob> in cluster <dcc> Done

Job <myJob> was submitted from host <gbarlogin2> by user <s174007> in cluster <dcc> at Fri Dec 20 14:02:56 2019
Job was executed on host(s) <n-62-20-3>, in queue <gpuv100>, as user <s174007> in cluster <dcc> at Fri Dec 20 15:22:19 2019
</zhome/b0/b/127184> was used as the home directory.
</zhome/b0/b/127184/Documents/Projects/AutoML/scripts> was used as the working directory.
Started at Fri Dec 20 15:22:19 2019
Terminated at Fri Dec 20 18:26:38 2019
Results reported at Fri Dec 20 18:26:38 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -q gpuv100
#BSUB -gpu "num=1"
#BSUB -J myJob
#BSUB -n 1
#BSUB -W 10:00
#BSUB -R "rusage[mem=6GB]"
#BSUB -o ../logs/gruco%J.out

module load python3/3.6.2
module load cuda/8.0
module load cudnn/v7.0-prod-cuda8

echo "Running script..."
python3 train.py 10000 MOONS 0.01 moving

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   11023.98 sec.
    Max Memory :                                 1859 MB
    Average Memory :                             1847.92 MB
    Total Requested Memory :                     6144.00 MB
    Delta Memory :                               4285.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                10
    Run time :                                   11062 sec.
    Turnaround time :                            15822 sec.

The output (if any) is above this job summary.

