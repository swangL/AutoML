Loaded module: python3/3.6.2
Loaded module: cuda/8.0
Loaded module: cudnn/v7.0-prod-cuda8
Running script...
##converting Controller to cuda-enabled
[4, 7, 'ReLU', 32, 7, 'Tanh', 16, 5, 'ReLU', 16, 7, 'Tanh', 16, 5, 'ReLU', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=1600, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[16, 3, 'Tanh', 8, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=5408, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=43264, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 5, 'Sigmoid', 64, 5, 'Sigmoid', 16, 3, 'Sigmoid', 4, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=2304, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=5408, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[32, 5, 'Tanh', 4, 3, 'Tanh', 2, 5, 'ReLU', 32, 3, 'ReLU', 64, 3, 'Tanh', 8, 5, 'ReLU', 64, 5, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=1600, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[8, 5, 'ReLU', 16, 3, 'Tanh', 16, 3, 'Tanh', 4, 3, 'Tanh', 8, 3, 'Sigmoid', 2, 5, 'Sigmoid', 4, 3, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(4, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(8, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Conv2d(2, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=2304, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[4, 3, 'ReLU', 4, 5, 'ReLU', 32, 3, 'Tanh', 32, 5, 'Sigmoid', 4, 5, 'Tanh', 32, 5, 'ReLU', 2, 3, 'Tanh', 2, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(32, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(2, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (15): Sigmoid()
  (16): Flatten()
  (17): Linear(in_features=648, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[16, 7, 'Sigmoid', 64, 5, 'Sigmoid', 2, 5, 'ReLU', 64, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=25600, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 5, 'Tanh', 16, 3, 'ReLU', 8, 5, 'Tanh', 32, 7, 'Tanh', 32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Flatten()
  (11): Linear(in_features=8192, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'ReLU', 64, 7, 'ReLU', 4, 3, 'Tanh', 4, 3, 'Sigmoid', 32, 5, 'Sigmoid', 4, 5, 'Tanh', 32, 7, 'Sigmoid', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(32, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=12544, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[4, 7, 'Tanh', 8, 7, 'Sigmoid', 64, 7, 'Tanh', 2, 7, 'Tanh', 64, 7, 'Sigmoid', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Flatten()
  (13): Linear(in_features=2304, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[32, 3, 'Sigmoid', 16, 5, 'Tanh', 2, 3, 'Tanh', 16, 7, 'Sigmoid', 64, 7, 'ReLU', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=3136, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[8, 3, 'ReLU', 32, 5, 'Sigmoid', 2, 5, 'Sigmoid', 16, 7, 'Sigmoid', 16, 7, 'Tanh', 8, 5, 'ReLU', 16, 3, 'Sigmoid', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(2, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=200, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=10816, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 2, 3, 'Tanh', 32, 5, 'ReLU', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=10816, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[8, 5, 'Tanh', 32, 3, 'Sigmoid', 8, 7, 'Tanh', 8, 5, 'ReLU', 4, 7, 'Sigmoid', 2, 5, 'ReLU', 2, 3, 'ReLU', 8, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(8, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): ReLU()
  (14): Conv2d(2, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (15): ReLU()
  (16): Flatten()
  (17): Linear(in_features=1152, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[64, 3, 'Tanh', 4, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=2704, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 7, 'Tanh', 16, 5, 'Sigmoid', 8, 7, 'Tanh', 2, 5, 'Tanh', 16, 5, 'Tanh', 4, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(16, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(2, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): ReLU()
  (14): Flatten()
  (15): Linear(in_features=6400, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[4, 3, 'ReLU', 16, 3, 'ReLU', 8, 3, 'Tanh', 64, 7, 'ReLU', 32, 5, 'ReLU', 8, 3, 'Sigmoid', 64, 3, 'Tanh', 32, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (15): Sigmoid()
  (16): Flatten()
  (17): Linear(in_features=12800, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[64, 5, 'Sigmoid', 32, 3, 'Tanh', 64, 5, 'Tanh', 64, 5, 'ReLU', 8, 5, 'ReLU', 2, 3, 'ReLU', 2, 7, 'Sigmoid', 8, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(64, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(2, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): ReLU()
  (16): Flatten()
  (17): Linear(in_features=2048, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[16, 3, 'ReLU', 4, 5, 'Sigmoid', 16, 5, 'Sigmoid', 32, 7, 'ReLU', 32, 5, 'Tanh', 8, 3, 'Tanh', 2, 7, 'Sigmoid', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(4, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(8, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Conv2d(2, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=784, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[16, 3, 'Tanh', 2, 7, 'Sigmoid', 16, 7, 'Sigmoid', 32, 5, 'Tanh', 64, 3, 'Sigmoid', 16, 3, 'Sigmoid', 2, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(2, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Conv2d(16, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): ReLU()
  (14): Flatten()
  (15): Linear(in_features=512, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[4, 3, 'ReLU', 32, 3, 'ReLU', 32, 5, 'ReLU', 16, 5, 'ReLU', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=9216, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[32, 5, 'ReLU', 2, 3, 'ReLU', 32, 5, 'ReLU', 16, 7, 'ReLU', 4, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(32, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Flatten()
  (11): Linear(in_features=1600, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[4, 5, 'ReLU', 4, 5, 'Sigmoid', 4, 7, 'ReLU', 2, 7, 'Tanh', 32, 3, 'Sigmoid', 2, 3, 'ReLU', 8, 3, 'ReLU', 4, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): ReLU()
  (14): Conv2d(8, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (15): Sigmoid()
  (16): Flatten()
  (17): Linear(in_features=576, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[4, 5, 'Sigmoid', 4, 7, 'ReLU', 4, 3, 'ReLU', 64, 5, 'ReLU', 8, 3, 'Sigmoid', 4, 5, 'Tanh', 64, 3, 'Sigmoid', 16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(8, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): ReLU()
  (16): Flatten()
  (17): Linear(in_features=5184, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[2, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 16, 3, 'Sigmoid', 8, 5, 'Sigmoid', 32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(8, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=10368, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 5, 'Sigmoid', 32, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 5, 'Sigmoid', 32, 3, 'Tanh', 16, 7, 'Tanh', 4, 3, 'ReLU', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=1296, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[8, 5, 'Tanh', 64, 3, 'ReLU', 32, 7, 'Tanh', 64, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=30976, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 3, 'Sigmoid', 2, 5, 'Tanh', 32, 3, 'Sigmoid', 16, 3, 'Sigmoid', 32, 7, 'ReLU', 4, 3, 'Sigmoid', 8, 3, 'Tanh', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Conv2d(4, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): ReLU()
  (16): Flatten()
  (17): Linear(in_features=15488, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[64, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Sigmoid', 2, 3, 'ReLU', 2, 3, 'ReLU', 16, 7, 'Tanh', 64, 7, 'Tanh', 2, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Flatten()
  (13): Linear(in_features=648, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[32, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[2, 7, 'Sigmoid', 64, 3, 'ReLU', 8, 7, 'Sigmoid', 32, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(8, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=10368, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'ReLU', 16, 3, 'ReLU', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(16, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=4608, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 5, 'Tanh', 32, 5, 'Sigmoid', 32, 5, 'Tanh', 4, 3, 'Sigmoid', 8, 3, 'ReLU', 16, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(4, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(8, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Flatten()
  (13): Linear(in_features=6400, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[2, 3, 'Tanh', 4, 3, 'Tanh', 2, 5, 'ReLU', 2, 5, 'Sigmoid', 8, 5, 'Sigmoid', 4, 7, 'Sigmoid', 8, 7, 'Tanh', 64, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(2, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(8, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Conv2d(4, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (15): Sigmoid()
  (16): Flatten()
  (17): Linear(in_features=6400, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[64, 7, 'Tanh', 4, 3, 'Tanh', 32, 7, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=12800, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'ReLU', 8, 7, 'Sigmoid', 64, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 7, 'Tanh', 2, 5, 'Sigmoid', 4, 3, 'Sigmoid', 32, 5, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(2, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=12800, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh', 2, 7, 'ReLU', 32, 5, 'Sigmoid', 2, 7, 'Tanh', 64, 3, 'Sigmoid', 4, 3, 'Sigmoid', 4, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Flatten()
  (15): Linear(in_features=1296, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[64, 5, 'Tanh', 16, 7, 'Sigmoid', 16, 5, 'ReLU', 16, 7, 'ReLU', 64, 7, 'ReLU', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=1152, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[4, 5, 'ReLU', 32, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=2704, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 32, 7, 'Sigmoid', 4, 3, 'Tanh', 8, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=2592, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'Sigmoid', 64, 5, 'Tanh', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=1352, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1352, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=2704, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'ReLU', 64, 3, 'ReLU', 8, 7, 'Tanh', 64, 7, 'Sigmoid', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=8192, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[64, 7, 'Sigmoid', 16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Sigmoid', 16, 5, 'Tanh', 8, 3, 'Tanh', 64, 3, 'Tanh', 8, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Flatten()
  (11): Linear(in_features=3872, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[8, 7, 'Tanh', 4, 3, 'Tanh', 2, 3, 'ReLU', 64, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=30976, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 7, 'Sigmoid', 64, 5, 'Sigmoid', 2, 3, 'Sigmoid', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=3872, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 5, 'Sigmoid', 4, 5, 'ReLU', 32, 7, 'Sigmoid', 64, 3, 'Sigmoid', 4, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Flatten()
  (11): Linear(in_features=1600, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[16, 7, 'ReLU', 2, 3, 'Sigmoid', 16, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(2, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=6400, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 3, 'Sigmoid', 64, 3, 'Tanh', 2, 7, 'Tanh', 2, 3, 'ReLU', 8, 3, 'Tanh', 16, 3, 'Sigmoid', 64, 5, 'Sigmoid', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (15): ReLU()
  (16): Flatten()
  (17): Linear(in_features=20736, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[2, 5, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=968, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 5, 'Tanh', 2, 3, 'Tanh', 64, 3, 'Tanh', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=36864, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[8, 3, 'Sigmoid', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3136, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 5, 'Sigmoid', 4, 3, 'ReLU', 4, 7, 'ReLU', 64, 7, 'Sigmoid', 16, 3, 'ReLU', 32, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Flatten()
  (13): Linear(in_features=8192, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[4, 7, 'Sigmoid', 2, 5, 'Tanh', 64, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 5, 'ReLU', 4, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=1936, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 2, 3, 'Sigmoid', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(2, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=1352, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[64, 7, 'Sigmoid', 32, 3, 'Tanh', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=7744, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 5, 'Sigmoid', 4, 7, 'Tanh', 4, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=1296, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 7, 'Tanh', 2, 7, 'ReLU', 2, 3, 'Sigmoid', 4, 7, 'Tanh', 4, 7, 'Sigmoid', 16, 5, 'Tanh', 64, 3, 'Tanh', 2, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(2, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(4, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): Sigmoid()
  (16): Flatten()
  (17): Linear(in_features=200, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[32, 5, 'Tanh', 8, 3, 'Tanh', 2, 3, 'ReLU', 64, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=43264, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1352, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=21632, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh', 2, 3, 'Tanh', 32, 3, 'ReLU', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=50176, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 7, 'ReLU', 2, 5, 'ReLU', 64, 7, 'Tanh', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=4096, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 8, 5, 'Sigmoid', 2, 5, 'ReLU', 32, 5, 'Sigmoid', 2, 3, 'ReLU', 64, 7, 'Tanh', 2, 5, 'Tanh', 4, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(8, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(2, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=400, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 7, 'Tanh', 2, 3, 'Tanh', 64, 7, 'Tanh', 8, 7, 'Tanh', 2, 7, 'Tanh', 64, 3, 'Sigmoid', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(8, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=9216, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
100/1000
Arch [32, 3, 'Tanh', 2, 7, 'Tanh', 2, 3, 'Tanh', 64, 7, 'Tanh', 8, 7, 'Tanh', 2, 7, 'Tanh', 64, 3, 'Sigmoid', 64, 3, 'Tanh']
acc tensor(0.1867)
loss tensor(0.6699, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.5153)

[8, 7, 'Tanh', 32, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Sigmoid', 4, 3, 'Sigmoid', 64, 3, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=2304, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 8, 5, 'ReLU', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(8, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=12800, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 3, 'Sigmoid', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3872, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 5, 'Tanh', 64, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 7, 'Sigmoid', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=30976, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'ReLU', 4, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2704, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=1352, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=968, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'ReLU', 64, 3, 'Tanh', 4, 5, 'Tanh', 2, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=1152, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 7, 'Tanh', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=1352, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 5, 'Tanh', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 8, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=5408, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=5408, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 5, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Sigmoid', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3872, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 5, 'Sigmoid', 64, 7, 'Tanh', 32, 3, 'ReLU', 8, 5, 'Sigmoid', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=6400, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[4, 3, 'Tanh', 2, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=1568, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'ReLU', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'ReLU', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=968, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=6400, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 5, 'ReLU', 32, 5, 'Sigmoid', 8, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=3200, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 3, 'Tanh', 4, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 5, 'ReLU', 2, 5, 'Tanh', 8, 5, 'Tanh', 16, 5, 'Tanh', 2, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(8, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(16, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Flatten()
  (13): Linear(in_features=648, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[32, 5, 'Sigmoid', 64, 3, 'ReLU', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=36864, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 5, 'Tanh', 32, 3, 'Tanh', 32, 3, 'ReLU', 64, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=7744, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[16, 5, 'Tanh', 32, 7, 'Sigmoid', 8, 5, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=20736, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 5, 'Tanh', 2, 5, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=25600, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'ReLU', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh', 16, 5, 'Tanh', 8, 3, 'Sigmoid', 2, 7, 'ReLU', 64, 3, 'Tanh', 2, 5, 'Tanh', 64, 5, 'Tanh', 2, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(8, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (15): ReLU()
  (16): Flatten()
  (17): Linear(in_features=392, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[8, 3, 'Sigmoid', 64, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=50176, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3200, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'Sigmoid', 64, 5, 'Tanh', 2, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=968, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[2, 3, 'ReLU', 4, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(2, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 7, 'Tanh', 32, 7, 'ReLU', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=512, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 3, 'Tanh', 64, 7, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=12800, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 5, 'Tanh', 64, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=30976, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'ReLU', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=968, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Sigmoid', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'ReLU', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(2, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12544, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=43264, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'ReLU', 64, 3, 'Tanh', 2, 5, 'ReLU', 8, 5, 'Tanh', 64, 7, 'Tanh', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=800, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[8, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 2, 7, 'Tanh', 64, 7, 'Tanh', 32, 5, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=12544, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 32, 7, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=3872, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 5, 'Sigmoid', 2, 3, 'Tanh', 64, 3, 'ReLU', 64, 3, 'Tanh', 4, 3, 'ReLU', 64, 7, 'Tanh', 16, 5, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(64, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(16, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=2048, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1352, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 7, 'ReLU', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=36864, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=21632, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
200/1000
Arch [16, 3, 'Tanh', 32, 5, 'Tanh']
acc tensor(0.6933)
loss tensor(1.0231, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6252)

[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=6272, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 2, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh', 32, 7, 'Tanh', 64, 7, 'Tanh', 64, 7, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=288, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[64, 3, 'Sigmoid', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1568, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 2, 5, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=10816, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 5, 'ReLU', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=10368, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 5, 'Tanh', 2, 7, 'Tanh', 64, 7, 'ReLU', 32, 3, 'ReLU', 8, 7, 'ReLU', 16, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=1600, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 5, 'Tanh', 2, 5, 'Tanh', 8, 3, 'Tanh', 8, 3, 'Tanh', 64, 7, 'ReLU', 64, 5, 'ReLU', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): ReLU()
  (14): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=20736, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[8, 3, 'Tanh', 32, 3, 'ReLU', 32, 3, 'Tanh', 32, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=18432, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 7, 'Tanh', 32, 7, 'Tanh', 2, 3, 'ReLU', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=648, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[2, 7, 'Tanh', 32, 5, 'Tanh', 2, 3, 'ReLU', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=20736, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 4, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1936, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=21632, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 4, 5, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=15488, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 7, 'Tanh', 32, 5, 'Tanh', 64, 7, 'Tanh', 16, 5, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=2048, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 7, 'Tanh', 4, 7, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=16384, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Sigmoid', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 5, 'Tanh', 2, 7, 'Tanh', 64, 7, 'Tanh', 32, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=6272, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=5408, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=6272, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Sigmoid', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'ReLU', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 16, 7, 'Tanh', 8, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=3872, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 64, 7, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=3200, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 7, 'Tanh', 2, 7, 'Sigmoid', 64, 5, 'ReLU', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=12544, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 5, 'Tanh', 8, 3, 'Sigmoid', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=36864, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Sigmoid', 4, 3, 'ReLU', 64, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=36864, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12544, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1568, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 2, 7, 'Tanh', 16, 3, 'Tanh', 64, 5, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=20736, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[2, 7, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 8, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=4608, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
300/1000
Arch [4, 3, 'Tanh']
acc tensor(0.7000)
loss tensor(0.8639, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6637)

[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1352, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 5, 'Tanh', 8, 7, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=7744, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 5, 'Tanh', 2, 7, 'Tanh', 8, 7, 'Tanh', 64, 7, 'Tanh', 64, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Sigmoid()
  (12): Flatten()
  (13): Linear(in_features=2304, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 5, 'Sigmoid', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=7744, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3200, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Sigmoid', 16, 7, 'ReLU', 8, 7, 'Tanh', 4, 7, 'Tanh', 32, 5, 'Tanh', 4, 7, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(16, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(32, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Flatten()
  (15): Linear(in_features=144, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[32, 7, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 5, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 3, 'Tanh', 16, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=50176, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 64, 3, 'Tanh', 8, 7, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=968, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 3, 'Sigmoid', 2, 5, 'Tanh', 64, 5, 'Tanh', 64, 3, 'Tanh', 64, 5, 'Tanh', 8, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): Sigmoid()
  (14): Flatten()
  (15): Linear(in_features=3872, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[16, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=21632, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 32, 3, 'ReLU', 2, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=25600, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh', 4, 5, 'Tanh', 64, 7, 'ReLU', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=392, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 7, 'Tanh', 8, 7, 'ReLU', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=12800, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 5, 'Tanh', 64, 3, 'ReLU', 8, 3, 'Tanh', 64, 5, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=18432, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 5, 'Tanh', 32, 7, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=7744, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=21632, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'ReLU', 64, 3, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=18432, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 7, 'Tanh', 4, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=1024, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Sigmoid', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 32, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 7, 'ReLU', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 4, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=21632, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 3, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=3872, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh', 8, 7, 'Tanh', 2, 5, 'Sigmoid', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(2, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=6400, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=43264, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 7, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=1600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 7, 'Tanh', 4, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=1600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Sigmoid', 4, 7, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=12800, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 64, 7, 'ReLU', 8, 3, 'ReLU', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=30976, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
400/1000
Arch [32, 3, 'Tanh']
acc tensor(0.6733)
loss tensor(0.7526, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6637)

[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3136, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 8, 5, 'Sigmoid', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=21632, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=5408, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 32, 7, 'ReLU', 32, 7, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=2592, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=21632, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 5, 'Tanh', 16, 7, 'ReLU', 4, 3, 'Tanh', 2, 7, 'Tanh', 2, 5, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(2, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Flatten()
  (15): Linear(in_features=6272, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=21632, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 5, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 7, 'ReLU', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=36864, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=16384, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 4, 5, 'Tanh', 64, 5, 'ReLU', 32, 5, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=15488, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 7, 'Tanh', 2, 7, 'ReLU', 64, 5, 'Tanh', 32, 7, 'Tanh', 16, 5, 'Tanh', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Flatten()
  (15): Linear(in_features=576, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 2, 7, 'ReLU', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 3, 'Tanh', 4, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2704, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3200, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 7, 'Tanh', 64, 5, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=648, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[32, 3, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 8, 7, 'Sigmoid', 32, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(8, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=15488, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=5408, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=4608, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'ReLU', 64, 5, 'Tanh', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=15488, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 32, 7, 'Sigmoid', 16, 5, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=30976, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'Tanh', 8, 7, 'Tanh', 32, 7, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=648, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 4, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2704, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 16, 5, 'ReLU', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=30976, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=10816, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 3, 'ReLU', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=36864, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=21632, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=5408, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
500/1000
Arch [8, 3, 'Tanh']
acc tensor(0.6800)
loss tensor(0.6748, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6740)

[4, 7, 'Tanh', 16, 5, 'Tanh', 64, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh', 4, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2704, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Sigmoid', 4, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=18432, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 5, 'Sigmoid', 2, 7, 'ReLU', 8, 5, 'Tanh', 4, 5, 'Sigmoid', 8, 7, 'ReLU', 32, 7, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(2, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(8, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Sigmoid()
  (10): Conv2d(4, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(8, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): Tanh()
  (16): Flatten()
  (17): Linear(in_features=576, out_features=10, bias=True)
  (18): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 8, 3, 'Tanh', 16, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=9216, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Sigmoid', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=6400, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 2, 7, 'ReLU', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=4096, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 5, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=648, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1352, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 7, 'Tanh', 64, 5, 'ReLU', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=2592, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 3, 'Tanh', 32, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=12800, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 5, 'ReLU', 4, 3, 'Tanh', 64, 7, 'Tanh', 32, 3, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=2592, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[32, 7, 'ReLU', 64, 7, 'Tanh', 64, 7, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=1024, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 5, 'ReLU', 4, 7, 'Tanh', 64, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=30976, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=5408, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[2, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 5, 'ReLU', 64, 3, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=968, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 7, 'Tanh', 32, 3, 'Tanh', 8, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=25600, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'ReLU', 4, 7, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=1024, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Sigmoid', 8, 5, 'ReLU', 64, 3, 'Tanh', 16, 5, 'Tanh', 4, 5, 'ReLU', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(16, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=12544, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 16, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 7, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=1600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 32, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=16384, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3200, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3872, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1568, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 4, 7, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=648, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 7, 'Tanh', 2, 3, 'Tanh', 4, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Flatten()
  (7): Linear(in_features=1936, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 2, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=16384, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 5, 'Tanh', 8, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=4608, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 16, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=6400, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 4, 3, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=9216, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 16, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=7744, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh', 32, 7, 'Tanh', 64, 7, 'Tanh', 64, 5, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=288, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 7, 'ReLU', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=2048, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 3, 'ReLU', 32, 7, 'ReLU', 4, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=30976, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[4, 7, 'Tanh', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=7744, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=968, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
600/1000
Arch [4, 7, 'Tanh', 2, 5, 'Tanh']
acc tensor(0.4267)
loss tensor(0.3399, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6525)

[8, 7, 'Tanh', 32, 7, 'ReLU', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=3200, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[64, 3, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1352, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=10816, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh', 2, 7, 'ReLU', 64, 3, 'ReLU', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=36864, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 32, 7, 'Tanh', 32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Flatten()
  (7): Linear(in_features=8192, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 5, 'Tanh', 8, 5, 'ReLU', 8, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Flatten()
  (7): Linear(in_features=4608, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'ReLU', 2, 5, 'Sigmoid', 2, 5, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(2, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=2304, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 7, 'Tanh', 8, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=3200, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 3, 'Tanh', 64, 7, 'Tanh', 32, 5, 'Tanh', 4, 5, 'Tanh', 32, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(32, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Flatten()
  (13): Linear(in_features=6272, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 3, 'Tanh', 32, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=36864, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 7, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=1600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 4, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1936, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU', 64, 3, 'ReLU', 32, 7, 'Tanh', 4, 7, 'Tanh', 4, 3, 'Tanh', 4, 7, 'ReLU', 32, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): ReLU()
  (12): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (13): ReLU()
  (14): Flatten()
  (15): Linear(in_features=4608, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[16, 7, 'ReLU', 64, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=30976, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 32, 3, 'Tanh', 32, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=18432, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=6400, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 8, 7, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=18432, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh', 4, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2704, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=36864, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 7, 'Tanh', 64, 7, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=1600, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 3, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
700/1000
Arch [2, 7, 'Tanh', 32, 3, 'Tanh']
acc tensor(0.6400)
loss tensor(0.4554, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6891)

[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 16, 7, 'Tanh', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=18432, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 2, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=1352, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 7, 'Tanh', 64, 3, 'ReLU', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=16384, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 16, 5, 'ReLU', 16, 3, 'Tanh', 64, 5, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=4608, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 3, 'Tanh', 64, 3, 'Tanh', 4, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=1936, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 3, 'Tanh', 64, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=36864, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=12544, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 32, 3, 'Tanh', 64, 7, 'Tanh', 64, 3, 'ReLU', 64, 7, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=4096, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=21632, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=10816, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Sigmoid', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3136, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 32, 5, 'Tanh', 64, 3, 'Tanh', 2, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=968, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 32, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 7, 'ReLU', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=20736, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 4, 7, 'Tanh', 32, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=16384, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'ReLU', 16, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 16, 5, 'ReLU', 4, 5, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(16, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=1600, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 3, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 4, 7, 'Sigmoid', 32, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=15488, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'ReLU', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 5, 'Tanh', 2, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=968, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 16, 5, 'Tanh', 16, 5, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(16, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=1024, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=6272, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 5, 'Sigmoid', 2, 7, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=800, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'ReLU', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=15488, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
800/1000
Arch [4, 7, 'ReLU', 32, 5, 'Tanh']
acc tensor(0.7133)
loss tensor(0.5556, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6503)

[2, 3, 'Tanh', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1352, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 32, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 32, 3, 'ReLU', 2, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=36864, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 3, 'Sigmoid', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=2304, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=12544, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3136, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 3, 'ReLU', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=18432, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 3, 'Tanh', 16, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=9216, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 8, 3, 'Tanh', 8, 7, 'Tanh', 8, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=3200, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[8, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'ReLU', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(2, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=3136, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'ReLU', 64, 7, 'Tanh', 64, 7, 'ReLU', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=2304, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[2, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 2, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 5, 'Tanh', 32, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=43264, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 4, 7, 'ReLU', 32, 5, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=5184, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 7, 'ReLU', 2, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1568, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Sigmoid', 32, 5, 'Tanh', 8, 3, 'ReLU', 32, 5, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(8, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Flatten()
  (11): Linear(in_features=25600, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[32, 3, 'Tanh', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=50176, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 7, 'Tanh', 32, 7, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=2048, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 4, 7, 'Tanh', 16, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=6400, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh', 2, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[8, 3, 'Tanh', 32, 7, 'Tanh', 2, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Flatten()
  (7): Linear(in_features=1152, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 5, 'Tanh', 32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=10368, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 4, 3, 'ReLU', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=43264, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 5, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=3872, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 7, 'Tanh', 2, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 8, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 8, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=5408, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh', 64, 3, 'ReLU', 64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=50176, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[4, 3, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 3, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=2304, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 64, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=30976, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1352, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
900/1000
Arch [32, 3, 'Tanh', 2, 5, 'Tanh']
acc tensor(0.7267)
loss tensor(0.4577, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6857)

[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh', 64, 5, 'Tanh', 32, 5, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=2048, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 7, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=2048, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[16, 7, 'Tanh', 32, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=18432, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh', 32, 3, 'Tanh', 16, 5, 'Tanh', 4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=1936, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'ReLU', 16, 7, 'Tanh', 64, 5, 'Tanh', 2, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(64, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (7): Sigmoid()
  (8): Flatten()
  (9): Linear(in_features=968, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 32, 5, 'Tanh', 8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=2592, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=9216, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh', 32, 3, 'ReLU']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=25088, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=6272, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=4608, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1568, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=10816, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Sigmoid', 8, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 16, 3, 'Tanh', 64, 3, 'ReLU', 4, 5, 'Tanh', 2, 5, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 4, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(4, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Flatten()
  (11): Linear(in_features=800, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[]
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=10, bias=True)
  (2): Softmax(dim=0)
)
[16, 3, 'Tanh', 16, 5, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 16, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=10816, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=43264, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 3, 'ReLU', 32, 5, 'Sigmoid', 64, 7, 'ReLU', 8, 3, 'Tanh', 64, 5, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(2, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Sigmoid()
  (6): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): ReLU()
  (8): Conv2d(64, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (9): Tanh()
  (10): Conv2d(8, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (13): Tanh()
  (14): Flatten()
  (15): Linear(in_features=12544, out_features=10, bias=True)
  (16): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 3, 'Tanh', 64, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=36864, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=1568, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=2304, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=21632, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[2, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=1152, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=6272, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 32, 7, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=12800, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[16, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=9216, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=50176, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Sigmoid', 32, 3, 'Tanh', 8, 3, 'Tanh', 4, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Sigmoid()
  (2): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(8, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Flatten()
  (9): Linear(in_features=1600, out_features=10, bias=True)
  (10): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=21632, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 3, 'Tanh', 64, 7, 'ReLU', 32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=18432, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=12544, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh', 2, 3, 'Tanh', 4, 3, 'Tanh', 2, 7, 'Tanh', 32, 7, 'ReLU']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(4, 2, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(2, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Flatten()
  (11): Linear(in_features=12800, out_features=10, bias=True)
  (12): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 2, 3, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[8, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 8, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(8, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[4, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=3136, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh', 2, 3, 'Sigmoid']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Sigmoid()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[4, 7, 'Tanh', 64, 5, 'Tanh', 64, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 4, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(4, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Flatten()
  (7): Linear(in_features=25600, out_features=10, bias=True)
  (8): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=36864, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[2, 3, 'Tanh', 64, 7, 'ReLU', 64, 5, 'Tanh', 64, 7, 'Tanh', 64, 5, 'ReLU', 2, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(2, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (5): Tanh()
  (6): Conv2d(64, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (7): Tanh()
  (8): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (9): ReLU()
  (10): Conv2d(64, 2, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (11): Tanh()
  (12): Flatten()
  (13): Linear(in_features=392, out_features=10, bias=True)
  (14): Softmax(dim=0)
)
[32, 5, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=21632, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[32, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=18432, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 64, 7, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 64, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=25600, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
[32, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Flatten()
  (3): Linear(in_features=25088, out_features=10, bias=True)
  (4): Softmax(dim=0)
)
[16, 7, 'Tanh', 8, 3, 'Tanh']
Sequential(
  (0): Conv2d(1, 16, kernel_size=(7, 7), stride=(1, 1), padding=(1, 1))
  (1): Tanh()
  (2): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): Tanh()
  (4): Flatten()
  (5): Linear(in_features=4608, out_features=10, bias=True)
  (6): Softmax(dim=0)
)
1000/1000
Arch [16, 7, 'Tanh', 8, 3, 'Tanh']
acc tensor(0.6933)
loss tensor(0.4326, device='cuda:0', grad_fn=<NegBackward>)
baseline tensor(0.6444)


------------------------------------------------------------
Sender: LSF System <lsfadmin@n-62-20-12>
Subject: Job 4993992: <myJob> in cluster <dcc> Done

Job <myJob> was submitted from host <gbarlogin2> by user <s174007> in cluster <dcc> at Mon Dec 30 00:30:05 2019
Job was executed on host(s) <n-62-20-12>, in queue <gpuv100>, as user <s174007> in cluster <dcc> at Mon Dec 30 00:30:06 2019
</zhome/b0/b/127184> was used as the home directory.
</zhome/b0/b/127184/Documents/Projects/AutoML/scripts> was used as the working directory.
Started at Mon Dec 30 00:30:06 2019
Terminated at Mon Dec 30 05:56:11 2019
Results reported at Mon Dec 30 05:56:11 2019

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh
#BSUB -q gpuv100
#BSUB -gpu "num=1"
#BSUB -J myJob
#BSUB -n 1
#BSUB -W 20:00
#BSUB -R "rusage[mem=20GB]"
#BSUB -o ../logs/conv%J.out

module load python3/3.6.2
module load cuda/8.0
module load cudnn/v7.0-prod-cuda8

echo "Running script..."
python3 train.py 1000 CONV 0.01 emoving

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   19509.28 sec.
    Max Memory :                                 1904 MB
    Average Memory :                             1901.02 MB
    Total Requested Memory :                     20480.00 MB
    Delta Memory :                               18576.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                10
    Run time :                                   19585 sec.
    Turnaround time :                            19566 sec.

The output (if any) is above this job summary.

